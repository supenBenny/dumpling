<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/mvc 
	    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location"  value="classpath:jdbc.properties"></property>
		<!--  <property name="location"  value="/WEB-INF/jdbc.properties"></property> -->
		<!-- 
		 <property name="locations">
		 	<list>
		 		<value>classpath:jdbc.properties</value>
		 	</list>
		 </property>
		 -->
	</bean>	

	<bean name="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages</value>
			</list>
		</property>
		<!--  <property name="basename"></property> -->
	</bean>
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
		p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.databaseurl}" p:username="${jdbc.username}"
		p:password="${jdbc.password}" />

	<!-- SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="org.se.*.*.domain" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<!-- 
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries}</prop>
				<prop key="hibernate.cache.region_prefix">${hibernate.cache.region_prefix}</prop>
				<prop key="hibernate.memcached.servers">${hibernate.memcached.servers}</prop>
				<prop key="hibernate.memcached.memcacheClientFactory">${hibernate.memcached.memcacheClientFactory}</prop>
				 -->
			</props>
		</property>
	</bean>
	
	
	
    <!-- enable autowire -->
    <context:annotation-config />

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />

	<!-- enable component scanning (beware that this does not enable mapper scanning!) -->    
    <context:component-scan base-package="org.dumpling.utils,org.se" />

	
	<!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <aop:config>
    	<aop:pointcut id="servicePointCut"  
    	     expression="execution(* org.se.*.*.service.*.*(..))"/>
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointCut"/>
    </aop:config> 
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
    	<tx:attributes>
    		<tx:method name="*" propagation="SUPPORTS" read-only="true"/>
    	</tx:attributes>
    </tx:advice>
    
    <!-- 配置后aop aspectj才能启用   -->
    <aop:aspectj-autoproxy/>
    
    <!-- execution(*任意返回值 com.tutorialspoint.Student.getName(..)) -->
    <aop:config>
	   <aop:aspect id="aspectTest" ref="loggingAspect">
	   		<aop:pointcut id="pointcut" expression="execution(* oorg.dumpling.utils.*.*(..))"></aop:pointcut>
	   		
	   		<aop:around pointcut-ref="pointcut" method="runTime"/>
	   	    
	   	    <aop:before pointcut-ref="pointcut" method="beforeAdvice"/>		
	   	    <aop:after pointcut-ref="pointcut" method="afterAdvice"/>
	   </aop:aspect>
	</aop:config>
	
	<bean id="loggingAspect" class="org.dumpling.utils.LoggingAspect" />
</beans>
